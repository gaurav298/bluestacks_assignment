{"version":3,"sources":["components/Header/Header.js","components/CampaignTable/CampaignModal.js","components/CampaignTable/CampaignItem.js","components/CampaignTable/CampaignTable.js","data/campaignData.js","components/FilterSection/FilterSection.js","components/CampaignSection/CampaignSection.js","App.js","serviceWorker.js","index.js"],"names":["Header","messages","react_default","a","createElement","className","index_es","Object","assign","id","headerTitle","CampaignModal","document","body","classList","add","remove","_this$props","this","props","data","toggleModal","src","iconUrl","title","country","date","onClick","Component","CampaignItem","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","autoBind","assertThisInitialized","state","showModal","modalData","setState","_this2","_this$props$data","selected","intl","_this$state","react","day","date1","Date","date2","diffTime","Math","abs","getTime","ceil","daysDiff","daysLeft","daysAgo","daysStart","view","pricing","report","htmlFor","event","stopPropagation","schedule","DayPickerInput_default","CampaignModal_CampaignModal","injectIntl","CampaignTable","_ref","campaign","actions","map","val","CampaignTable_CampaignItem","key","campaigns","past","live","upcoming","FilterSection","Filters","item","FilterSection_FilterButton","value","setSelected","components_CampaignTable_CampaignTable","FilterButton","concat","href","CampaignSection","FilterSection_FilterSection_FilterSection","addLocaleData","toConsumableArray","locale_en","locale_de","de","messages_de","en","messages_en","App","language","locale","changeLanguage","components_Header_Header","components_CampaignSection_CampaignSection","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.840fb427.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport \"./Header.css\";\n\nconst Header = (messages) => {\n    return (\n        <div className=\"makeFlex header\">\n            <p className=\"title\">\n                <FormattedMessage\n                    id=\"headerTitle\"\n                    {...messages.headerTitle}\n                />\n            </p>\n            <p className=\"makeFlex betaSection\">\n                <span>BETA</span>\n                <span className=\"hamburger makeFlex column\">\n                    <span />\n                    <span />\n                    <span />\n                </span>\n            </p>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nexport default class CampaignModal extends Component {\n\n    componentDidMount() {\n        document.body.classList.add(\"bodyFixed\");\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove(\"bodyFixed\");\n    }\n\n    render() {\n        const {data, toggleModal} = this.props;\n        return (\n            <div className=\"modalContainer\">\n                <div className=\"modal\">\n                    <img src={data.iconUrl} className=\"modalIcon\" />\n                    <p className=\"title\">{data.title}</p>\n                    <p className=\"country\">{data.country}</p>\n                    <p className=\"date\">Campaign Date: {data.date}</p>\n                </div>\n                <div className=\"backdrop\" onClick={toggleModal} />\n            </div>\n        );\n    }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport autoBind from \"react-autobind\";\nimport CampaignModal from \"./CampaignModal\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\n\nclass CampaignItem extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n        this.state = {\n            showModal: false,\n            modalData: \"\"\n        };\n    }\n\n    toggleModal(data) {\n        this.setState({ showModal: !this.state.showModal, modalData: data });\n    }\n\n    render() {\n        const {\n            data: { title, date, iconUrl, country },\n            selected,\n            intl: { messages }\n        } = this.props;\n        const daysDiff = day => {\n            const date1 = new Date(day);\n            const date2 = new Date();\n            const diffTime = Math.abs(date2.getTime() - date1.getTime());\n            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n            return diffDays;\n        };\n        const daysMsg = () => {\n            if (selected === \"upcoming\") {\n                return (\n                    <FormattedMessage id=\"daysLeft\" {...messages.daysLeft} />\n                );\n            } else if (selected === \"past\") {\n                return <FormattedMessage id=\"daysAgo\" {...messages.daysAgo} />;\n            }\n            return <FormattedMessage id=\"daysStart\" {...messages.daysStart} />;\n        };\n        const { showModal, modalData } = this.state;\n        return (\n            <Fragment>\n                <li\n                    className=\"makeFlex\"\n                    onClick={() => this.toggleModal(this.props.data)}\n                >\n                    <span className=\"makeFlex column hrtlCenter blackText textLeft font14\">\n                        <span>{date}</span>\n                        <span>\n                            <span>{daysDiff(date)}</span>\n                            &nbsp;\n                            <span>{daysMsg()}</span>\n                        </span>\n                    </span>\n                    <span className=\"makeFlex vrtlCenter blueText font14\">\n                        <img src={iconUrl} className=\"campaignIcon\" />\n                        <span className=\"makeFlex column textLeft\">\n                            <span>{title}</span>\n                            <span>{country}</span>\n                        </span>\n                    </span>\n                    <span className=\"makeFlex column perfectCenter blueText font10\">\n                        <span className=\"rupeeSymbol\">$+</span>\n                        <FormattedMessage id=\"view\" {...messages.view} />\n                        <FormattedMessage id=\"pricing\" {...messages.pricing} />\n                    </span>\n                    <span className=\"makeFlex perfectCenter font10 blueText actions\">\n                        <span className=\"makeFlex column disabled vrtlCenter\">\n                            <span className=\"csvIcon\" />\n                            <span>CSV</span>\n                        </span>\n                        <span className=\"makeFlex column disabled vrtlCenter\">\n                            <span className=\"reportIcon\" />\n                            <FormattedMessage\n                                id=\"report\"\n                                {...messages.report}\n                            />\n                        </span>\n                        <span className=\"makeFlex column vrtlCenter calendar\">\n                            <label\n                                className=\"makeFlex column vrtlCenter\"\n                                htmlFor=\"daypicker\"\n                                onClick={event => event.stopPropagation()}\n                            >\n                                <span className=\"calendarIcon icon\" />\n                                <FormattedMessage\n                                    id=\"schedule\"\n                                    {...messages.schedule}\n                                />\n                                <DayPickerInput id=\"daypicker\" />\n                            </label>\n                        </span>\n                    </span>\n                </li>\n                {showModal && (\n                    <CampaignModal\n                        data={modalData}\n                        toggleModal={this.toggleModal}\n                    />\n                )}\n            </Fragment>\n        );\n    }\n}\n\nexport default injectIntl(CampaignItem);\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport CampaignItem from \"./CampaignItem\";\n\nimport \"./CampaignTable.css\";\n\nconst CampaignTable = ({ data, selected }, messages) => {\n    return (\n        <ul className=\"campaignList\">\n            <li className=\"makeFlex\">\n                <FormattedMessage id=\"date\" {...messages.date} />\n                <FormattedMessage id=\"campaign\" {...messages.campaign} />\n                <FormattedMessage id=\"view\" {...messages.view} />\n                <FormattedMessage id=\"actions\" {...messages.actions} />\n            </li>\n            {data.map(val => {\n                return (\n                    <CampaignItem\n                        selected={selected}\n                        data={val}\n                        key={val.title}\n                    />\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default CampaignTable;\n","export const campaigns = {\n    past: [\n        {\n            title: \"Test Whatsapp\",\n            date: \"2017-05-01\",\n            iconUrl: \"../images/whatsapp.jpg\",\n            country: \"US\"\n        },\n        {\n            title: \"Super Jewels Quest\",\n            date: \"2016-04-17\",\n            iconUrl: \"../images/jewelsQuest.jpg\",\n            country: \"CA\"\n        },\n        {\n            title: \"Mole Slayer\",\n            date: \"2016-04-14\",\n            iconUrl: \"../images/slayer.jpg\",\n            country: \"FR\"\n        },\n        {\n            title: \"Mancala Mix\",\n            date: \"2016-04-14\",\n            iconUrl: \"../images/mancala.jpg\",\n            country: \"CA\"\n        },\n        {\n            title: \"PUBG\",\n            date: \"2016-04-17\",\n            iconUrl: \"../images/pubg.jpg\",\n            country: \"CHINA\"\n        }\n    ],\n    live: [\n        \n        {\n            title: \"Super Jewels Quest\",\n            date: \"2019-04-17\",\n            iconUrl: \"../images/jewelsQuest.jpg\",\n            country: \"CA\"\n        },\n        {\n            title: \"Mancala Mix\",\n            date: \"2019-04-14\",\n            iconUrl: \"../images/mancala.jpg\",\n            country: \"CA\"\n        },\n        {\n            title: \"Mole Slayer\",\n            date: \"2019-04-14\",\n            iconUrl: \"../images/slayer.jpg\",\n            country: \"FR\"\n        },\n        {\n            title: \"Test Whatsapp\",\n            date: \"2019-05-01\",\n            iconUrl: \"../images/whatsapp.jpg\",\n            country: \"US\"\n        },\n        \n        {\n            title: \"PUBG\",\n            date: \"2019-04-17\",\n            iconUrl: \"../images/pubg.jpg\",\n            country: \"CHINA\"\n        }\n    ],\n    upcoming: [\n        {\n            title: \"Test Whatsapp\",\n            date: \"2020-05-01\",\n            iconUrl: \"../images/whatsapp.jpg\",\n            country: \"US\"\n        },\n        {\n            title: \"PUBG\",\n            date: \"2020-04-17\",\n            iconUrl: \"../images/pubg.jpg\",\n            country: \"CHINA\"\n        },\n        {\n            title: \"Mole Slayer\",\n            date: \"2020-04-14\",\n            iconUrl: \"../images/slayer.jpg\",\n            country: \"FR\"\n        },\n        {\n            title: \"Mancala Mix\",\n            date: \"2020-04-14\",\n            iconUrl: \"../images/mancala.jpg\",\n            country: \"CA\"\n        },\n        {\n            title: \"Super Jewels Quest\",\n            date: \"2020-04-17\",\n            iconUrl: \"../images/jewelsQuest.jpg\",\n            country: \"CA\"\n        }\n    ]\n};\n","import React, { Component, Fragment } from \"react\";\nimport autoBind from \"react-autobind\";\nimport CampaignTable from \"../CampaignTable/CampaignTable\";\n\nimport Filters from \"../../data/FilterButtons.json\";\nimport {campaigns} from \"../../data/campaignData\";\nimport \"./FilterSection.css\";\n\nexport default class FilterSection extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n        this.state = {\n            selected: \"upcoming\",\n        };\n    }\n\n    setSelected(val) {\n        if (this.state.selected === val) {\n            return;\n        } else {\n            this.setState({ selected: val });\n        }\n    }\n\n    render() {\n        const {selected} = this.state;\n        return (\n            <Fragment>\n            <ul className=\"makeFlex filterButtons\">\n                {Filters.map(item => {\n                    return (\n                        <FilterButton\n                            key={item.value}\n                            data={item}\n                            setSelected={this.setSelected}\n                            selected={selected}\n                        />\n                    );\n                })}\n            </ul>\n            <CampaignTable selected={selected} data={campaigns[selected]} />\n            </Fragment>\n        );\n    }\n}\n\nconst FilterButton = ({ data, setSelected, selected }) => {\n    return (\n        <li\n            className={`${\n                selected === data.value ? \"selected\" : \"\"\n            } bold makeFlex vrtlCenter`}\n        >\n            <a\n                href=\"javascript:void(0);\"\n                onClick={() => setSelected(data.value)}\n            >\n                {data.title}\n            </a>\n        </li>\n    );\n};\n","import React from \"react\";\nimport { FormattedHTMLMessage } from \"react-intl\";\nimport FilterSection from \"../FilterSection/FilterSection\";\n\nimport \"./CampaignSection.css\";\n\nconst CampaignSection = (messages) => {\n    return (\n        <div className=\"campaignSection\">\n            <p className=\"campaignTitle\">\n                <FormattedHTMLMessage id=\"title\" {...messages.title} />\n            </p>\n            <FilterSection />\n        </div>\n    );\n};\n\nexport default CampaignSection;\n","import React, { Component, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport autoBind from \"react-autobind\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport locale_en from \"react-intl/locale-data/en\";\nimport locale_de from \"react-intl/locale-data/de\";\nimport Header from \"./components/Header/Header\";\nimport CampaignSection from \"./components/CampaignSection/CampaignSection\";\n\nimport messages_de from \"./data/de.json\";\nimport messages_en from \"./data/en.json\";\n\nimport \"./App.css\";\n\naddLocaleData([...locale_en, ...locale_de]);\n\nconst messages = {\n    de: messages_de,\n    en: messages_en\n};\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        autoBind(this);\n        this.state = {\n            language: \"en\"\n        }\n    }\n\n    changeLanguage() {\n        const language = this.state.language === \"en\" ? \"de\" : \"en\";\n        this.setState({language: language});\n    }\n\n    render() {\n        const {language} = this.state;\n        return (\n            <IntlProvider locale={language} messages={messages[language]}>\n                <Fragment>\n                    <p className=\"changeLanguageLink\"><a href=\"javascript:void(0);\" onClick={this.changeLanguage}>Change Language</a></p>\n                    <Header />\n                    <CampaignSection />\n                </Fragment>\n            </IntlProvider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}